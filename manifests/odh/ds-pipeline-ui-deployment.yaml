kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    kfctl.kubeflow.io/kfdef-instance: pipelines.odh-applications
  name: ds-pipeline-ui
  labels:
    app: ds-pipeline-ui
    application-crd-id: kubeflow-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ds-pipeline-ui
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ds-pipeline-ui
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
    spec:
      restartPolicy: Always
      serviceAccountName: ds-pipeline-ui
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: oauth-proxy
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: proxy-tls
              mountPath: /etc/tls/private
          terminationMessagePolicy: File
          image: 'registry.redhat.io/openshift4/ose-oauth-proxy:v4.8'
          args:
            - '--https-address=:8443'
            - '--provider=openshift'
            - '--openshift-service-account=ds-pipeline-ui'
            - '--upstream=http://localhost:3000'
            - '--tls-cert=/etc/tls/private/tls.crt'
            - '--tls-key=/etc/tls/private/tls.key'
            - '--cookie-secret=SECRET'
            - >-
              --openshift-delegate-urls={"/": {"resource": "routes", "verb":
              "get", "namespace": "odh-applications"}}
            - >-
              --openshift-sar={"resource": "routes", "namespace":
              "odh-applications", "verb": "get"}
            - '--skip-auth-regex=''(^/metrics|^/apis/v1beta1/healthz)'''
        - resources:
            requests:
              cpu: 10m
              memory: 70Mi
          readinessProbe:
            exec:
              command:
                - wget
                - '-q'
                - '-S'
                - '-O'
                - '-'
                - 'http://localhost:3000/apis/v1beta1/healthz'
            initialDelaySeconds: 3
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: ds-pipeline-ui
          livenessProbe:
            exec:
              command:
                - wget
                - '-q'
                - '-S'
                - '-O'
                - '-'
                - 'http://localhost:3000/apis/v1beta1/healthz'
            initialDelaySeconds: 3
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-pod-template.json
            - name: MINIO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mlpipeline-minio-artifact
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mlpipeline-minio-artifact
                  key: secretkey
            - name: ALLOW_CUSTOM_VISUALIZATIONS
              value: 'true'
            - name: ARGO_ARCHIVE_LOGS
              value: 'true'
          ports:
            - containerPort: 3000
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              readOnly: true
              mountPath: /etc/config
          terminationMessagePolicy: File
          image: 'quay.io/internaldatahub/frontend:1.1.0'
      serviceAccount: ds-pipeline-ui
      volumes:
        - name: config-volume
          configMap:
            name: ds-pipeline-ui-configmap
            defaultMode: 420
        - name: proxy-tls
          secret:
            secretName: ds-pipelines-ui-proxy-tls
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
